# DO NOT EDIT - file generated by corresponding .py file
snippet com "/* comment */" b
/* $1 */
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet cb "compiler barrier (gcc)" b
asm volatile("": : :"memory")
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet docstring "docstring for func or type" bm
/**
    ${1:Brief description.}

    ${0:Full description.}
*/
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet doc "docstring for func or type" bm
/**
    ${1:Brief description.}

    ${0:Full description.}
*/
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ig "(void) ...;" b
(void) $1;$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet ts "typedef struct name { ... }" b
typedef struct ${1:name}
{
    $0
} $1;
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet vmain "main(void)" b
/** @brief Main program entry point.
    @retval 0
        Success.
*/
int
main(void)
{
    $0
    return 0;
}
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet depr "__attribute__ ((deprecated))" w
__attribute__ ((deprecated))$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet unused "__attribute__ ((unused))" w
__attribute__ ((unused))$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet template_c.c ".c template" bm
#ifndef INCLUDED_`!p import re; res = re.sub('[-/]', '_', t[1].rsplit('.')[0]).upper()`
#include "${1:`!v expand('%:t:r')`.h}"
#endif

$0
endsnippet
# DO NOT EDIT - file generated by corresponding .py file
snippet template_c.h ".h template" bm
#ifndef INCLUDED_${1:`!p import re; res = re.sub('[-/]', '_', vim.eval("expand('%:t:r')")).upper()`}
#define INCLUDED_$1

#ifdef __cplusplus
extern "C" {
#endif

$0

#ifdef __cplusplus
}
#endif

#endif /* INCLUDED_$1 */
endsnippet
